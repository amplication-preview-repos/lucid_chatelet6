datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Author {
  analyticsItems Analytics[]
  bio            String?
  courses        Course[]
  createdAt      DateTime       @default(now())
  id             String         @id @default(cuid())
  name           String?
  subdomain      String?
  subscriptions  Subscription[]
  updatedAt      DateTime       @updatedAt
}

model Subscriber {
  createdAt        DateTime       @default(now())
  email            String?
  id               String         @id @default(cuid())
  subscriptionDate DateTime?
  subscriptions    Subscription[]
  updatedAt        DateTime       @updatedAt
}

model Page {
  content   String?
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  mediaUrl  String?
  title     String?
  updatedAt DateTime @updatedAt
}

model Course {
  author      Author?  @relation(fields: [authorId], references: [id])
  authorId    String?
  createdAt   DateTime @default(now())
  description String?
  id          String   @id @default(cuid())
  title       String?
  updatedAt   DateTime @updatedAt
}

model Subscription {
  author           Author?                 @relation(fields: [authorId], references: [id])
  authorId         String?
  createdAt        DateTime                @default(now())
  id               String                  @id @default(cuid())
  status           EnumSubscriptionStatus?
  subscriber       Subscriber?             @relation(fields: [subscriberId], references: [id])
  subscriberId     String?
  subscriptionDate DateTime?
  updatedAt        DateTime                @updatedAt
}

model User {
  createdAt DateTime @default(now())
  email     String?  @unique
  firstName String?
  id        String   @id @default(cuid())
  lastName  String?
  password  String
  roles     Json
  updatedAt DateTime @updatedAt
  username  String   @unique
}

model Role {
  admins    Admin[]
  createdAt DateTime          @default(now())
  id        String            @id @default(cuid())
  roleName  EnumRoleRoleName?
  updatedAt DateTime          @updatedAt
}

model Admin {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  password  String?
  role      Role?    @relation(fields: [roleId], references: [id])
  roleId    String?
  updatedAt DateTime @updatedAt
  username  String?
}

model Analytics {
  author           Author?   @relation(fields: [authorId], references: [id])
  authorId         String?
  coursesSold      Int?
  createdAt        DateTime  @default(now())
  id               String    @id @default(cuid())
  lastSaleDate     DateTime?
  subscribersCount Int?
  totalEarnings    Float?
  updatedAt        DateTime  @updatedAt
}

enum EnumSubscriptionStatus {
  Option1
}

enum EnumRoleRoleName {
  Option1
}
