/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AnalyticsCreateNestedManyWithoutAuthorsInput } from "./AnalyticsCreateNestedManyWithoutAuthorsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { CourseCreateNestedManyWithoutAuthorsInput } from "./CourseCreateNestedManyWithoutAuthorsInput";
import { SubscriptionCreateNestedManyWithoutAuthorsInput } from "./SubscriptionCreateNestedManyWithoutAuthorsInput";

@InputType()
class AuthorCreateInput {
  @ApiProperty({
    required: false,
    type: () => AnalyticsCreateNestedManyWithoutAuthorsInput,
  })
  @ValidateNested()
  @Type(() => AnalyticsCreateNestedManyWithoutAuthorsInput)
  @IsOptional()
  @Field(() => AnalyticsCreateNestedManyWithoutAuthorsInput, {
    nullable: true,
  })
  analyticsItems?: AnalyticsCreateNestedManyWithoutAuthorsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  bio?: string | null;

  @ApiProperty({
    required: false,
    type: () => CourseCreateNestedManyWithoutAuthorsInput,
  })
  @ValidateNested()
  @Type(() => CourseCreateNestedManyWithoutAuthorsInput)
  @IsOptional()
  @Field(() => CourseCreateNestedManyWithoutAuthorsInput, {
    nullable: true,
  })
  courses?: CourseCreateNestedManyWithoutAuthorsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  subdomain?: string | null;

  @ApiProperty({
    required: false,
    type: () => SubscriptionCreateNestedManyWithoutAuthorsInput,
  })
  @ValidateNested()
  @Type(() => SubscriptionCreateNestedManyWithoutAuthorsInput)
  @IsOptional()
  @Field(() => SubscriptionCreateNestedManyWithoutAuthorsInput, {
    nullable: true,
  })
  subscriptions?: SubscriptionCreateNestedManyWithoutAuthorsInput;
}

export { AuthorCreateInput as AuthorCreateInput };
