/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AnalyticsUpdateManyWithoutAuthorsInput } from "./AnalyticsUpdateManyWithoutAuthorsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { CourseUpdateManyWithoutAuthorsInput } from "./CourseUpdateManyWithoutAuthorsInput";
import { SubscriptionUpdateManyWithoutAuthorsInput } from "./SubscriptionUpdateManyWithoutAuthorsInput";

@InputType()
class AuthorUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AnalyticsUpdateManyWithoutAuthorsInput,
  })
  @ValidateNested()
  @Type(() => AnalyticsUpdateManyWithoutAuthorsInput)
  @IsOptional()
  @Field(() => AnalyticsUpdateManyWithoutAuthorsInput, {
    nullable: true,
  })
  analyticsItems?: AnalyticsUpdateManyWithoutAuthorsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  bio?: string | null;

  @ApiProperty({
    required: false,
    type: () => CourseUpdateManyWithoutAuthorsInput,
  })
  @ValidateNested()
  @Type(() => CourseUpdateManyWithoutAuthorsInput)
  @IsOptional()
  @Field(() => CourseUpdateManyWithoutAuthorsInput, {
    nullable: true,
  })
  courses?: CourseUpdateManyWithoutAuthorsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  subdomain?: string | null;

  @ApiProperty({
    required: false,
    type: () => SubscriptionUpdateManyWithoutAuthorsInput,
  })
  @ValidateNested()
  @Type(() => SubscriptionUpdateManyWithoutAuthorsInput)
  @IsOptional()
  @Field(() => SubscriptionUpdateManyWithoutAuthorsInput, {
    nullable: true,
  })
  subscriptions?: SubscriptionUpdateManyWithoutAuthorsInput;
}

export { AuthorUpdateInput as AuthorUpdateInput };
